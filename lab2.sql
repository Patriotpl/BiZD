ALTER TABLE EMPLOYEES
DROP CONSTRAINT fk_manager;
ALTER TABLE EMPLOYEES
DROP CONSTRAINT e_d1;
ALTER TABLE EMPLOYEES
DROP CONSTRAINT e_j1;
ALTER TABLE JOB_HISTORY
DROP CONSTRAINT jh_j1;
ALTER TABLE JOB_HISTORY
DROP CONSTRAINT jh_e1;
ALTER TABLE JOB_HISTORY
DROP CONSTRAINT jh_d1;
ALTER TABLE DEPARTMENTS
DROP CONSTRAINT d_l1;
ALTER TABLE LOCATIONS
DROP CONSTRAINT l_c1;
ALTER TABLE COUNTRIES


DROP CONSTRAINT c_r1;
DROP TABLE EMPLOYEES;
DROP TABLE JOB_HISTORY;
DROP TABLE DEPARTMENTS;
DROP TABLE LOCATIONS;
DROP TABLE COUNTRIES;


CREATE TABLE DEPARTMENTS AS SELECT * FROM HR.DEPARTMENTS;
CREATE TABLE EMPLOYEES AS SELECT * FROM HR.EMPLOYEES;
CREATE TABLE JOBS AS SELECT * FROM HR.JOBS;
CREATE TABLE JOB_GRADES AS SELECT * FROM HR.JOB_GRADES;
CREATE TABLE JOB_HISTORY AS SELECT * FROM HR.JOB_HISTORY;
CREATE TABLE LOCATIONS AS SELECT * FROM HR.LOCATIONS;
CREATE TABLE PRODUCTS AS SELECT * FROM HR.PRODUCTS;
CREATE TABLE REGIONS AS SELECT * FROM HR.REGIONS;
CREATE TABLE SALES AS SELECT * FROM HR.SALES;
CREATE TABLE COUNTRIES AS SELECT * FROM HR.COUNTRIES;


ALTER TABLE COUNTRIES
ADD CONSTRAINT COUNTRY_C_ID_PK PRIMARY KEY (COUNTRY_ID);
ALTER TABLE DEPARTMENTS
ADD CONSTRAINT DEPT_ID_PK PRIMARY KEY (DEPARTMENT_ID);
ALTER TABLE EMPLOYEES
ADD CONSTRAINT EMP_EMP_ID_PK PRIMARY KEY (EMPLOYEE_ID);
ALTER TABLE JOBS
ADD CONSTRAINT JOB_ID_PK PRIMARY KEY (JOB_ID);
ALTER TABLE JOB_GRADES
ADD CONSTRAINT SYS_C008201 PRIMARY KEY (GRADE);
ALTER TABLE JOB_HISTORY
ADD CONSTRAINT JHIST_EMP_ID_ST_DATE_PK PRIMARY KEY (EMPLOYEE_ID, START_DATE);
ALTER TABLE LOCATIONS
ADD CONSTRAINT LOC_ID_PK PRIMARY KEY (LOCATION_ID);
ALTER TABLE PRODUCTS
ADD CONSTRAINT SYS_C00150442 PRIMARY KEY (PRODUCT_ID);
ALTER TABLE REGIONS
ADD CONSTRAINT REG_ID_PK PRIMARY KEY (REGION_ID);
ALTER TABLE SALES
ADD CONSTRAINT SYS_C00150443 PRIMARY KEY (SALE_ID);
ALTER TABLE COUNTRIES
ADD CONSTRAINT COUNTR_REG_FK FOREIGN KEY (REGION_ID) REFERENCES REGIONS (REGION_ID);
ALTER TABLE DEPARTMENTS
ADD CONSTRAINT DEPT_LOC_FK FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS (LOCATION_ID);
ALTER TABLE DEPARTMENTS
ADD CONSTRAINT DEPT_MGR_FK FOREIGN KEY (MANAGER_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID);
ALTER TABLE EMPLOYEES
ADD CONSTRAINT EMP_DEPT_FK FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS (DEPARTMENT_ID);
ALTER TABLE EMPLOYEES
ADD CONSTRAINT EMP_JOB_FK FOREIGN KEY (JOB_ID) REFERENCES JOBS (JOB_ID);
ALTER TABLE EMPLOYEES
ADD CONSTRAINT EMP_MANAGER_FK FOREIGN KEY (MANAGER_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID);
ALTER TABLE JOB_HISTORY
ADD CONSTRAINT JHIST_DEPT_FK FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENTS (DEPARTMENT_ID);
ALTER TABLE JOB_HISTORY
ADD CONSTRAINT JHIST_EMP_FK FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID);
ALTER TABLE JOB_HISTORY
ADD CONSTRAINT JHIST_JOB_FK FOREIGN KEY (JOB_ID) REFERENCES JOBS (JOB_ID);
ALTER TABLE LOCATIONS
ADD CONSTRAINT LOC_C_ID_FK FOREIGN KEY (COUNTRY_ID) REFERENCES COUNTRIES (COUNTRY_ID);
ALTER TABLE SALES
ADD CONSTRAINT SYS_C00150942 FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID);



SELECT LAST_NAME || ' ' || SALARY AS wynagrodzenie
FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (20, 50)
  AND SALARY BETWEEN 2000 AND 7000
ORDER BY LAST_NAME;



SELECT HIRE_DATE, LAST_NAME, <user_column>
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL
  AND EXTRACT(YEAR FROM HIRE_DATE) = 2005
ORDER BY <user_column>;



SELECT FIRST_NAME || ' ' || LAST_NAME AS imie_nazwisko, SALARY, PHONE_NUMBER
FROM EMPLOYEES
WHERE SUBSTR(LAST_NAME, 3, 1) = 'E'
  AND FIRST_NAME LIKE '%' || <user_name_part> || '%'
ORDER BY 1 DESC, 2 ASC;



SELECT FIRST_NAME || ' ' || LAST_NAME AS imie_nazwisko,
       ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE)) AS months_worked,
       CASE 
           WHEN MONTHS_BETWEEN(SYSDATE, HIRE_DATE) <= 150 THEN 0.1 * SALARY
           WHEN MONTHS_BETWEEN(SYSDATE, HIRE_DATE) BETWEEN 151 AND 200 THEN 0.2 * SALARY
           ELSE 0.3 * SALARY
       END AS wysokosc_dodatku
FROM EMPLOYEES
ORDER BY months_worked;



SELECT DEPARTMENT_ID,
       ROUND(SUM(SALARY)) AS suma_zarobkow,
       ROUND(AVG(SALARY)) AS srednia_zarobkow
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING MIN(SALARY) > 5000;



SELECT E.LAST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME, E.JOB_ID
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE E.LOCATION_ID = (SELECT LOCATION_ID FROM LOCATIONS WHERE CITY = 'Toronto');



SELECT E1.FIRST_NAME || ' ' || E1.LAST_NAME AS employee_name,
       E2.FIRST_NAME || ' ' || E2.LAST_NAME AS colleague_name
FROM EMPLOYEES E1
JOIN EMPLOYEES E2 ON E1.DEPARTMENT_ID = E2.DEPARTMENT_ID
WHERE E1.FIRST_NAME = 'Jennifer'
  AND E1.EMPLOYEE_ID != E2.EMPLOYEE_ID;



SELECT D.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM DEPARTMENTS D
LEFT JOIN EMPLOYEES E ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
WHERE E.EMPLOYEE_ID IS NULL;



CREATE TABLE JOB_GRADES_COPY AS SELECT * FROM HR.JOB_GRADES;

SELECT E.FIRST_NAME || ' ' || E.LAST_NAME AS imie_nazwisko,
       E.JOB_ID, D.DEPARTMENT_NAME, E.SALARY, J.GRADE_LEVEL
FROM EMPLOYEES E
JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN JOB_GRADES J ON E.SALARY BETWEEN J.LOW_SALARY AND J.HIGH_SALARY;



SELECT FIRST_NAME || ' ' || LAST_NAME AS imie_nazwisko, SALARY
FROM EMPLOYEES
WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES)
ORDER BY SALARY DESC;



SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.LAST_NAME
FROM EMPLOYEES E
WHERE E.DEPARTMENT_ID IN (
    SELECT DISTINCT D.DEPARTMENT_ID
    FROM EMPLOYEES E2
    JOIN DEPARTMENTS D ON E2.DEPARTMENT_ID = D.DEPARTMENT_ID
    WHERE E2.LAST_NAME LIKE '%u%'
);